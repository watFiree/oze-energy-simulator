/*** returns power generated by tuebine in kilo wats */
const calculatePowerGeneratedByTurbine = (turbineParameters) => {
  const {
    turbineSpeed,
    windDensity,
    bladeLength,
    generatorEfficiency,
    mechanicalEfficiency,
    CpFactor,
    minWindSpeedToWork,
    maxiWindSpeedToWork,
  } = turbineParameters;
  /* 
    exuations:
    P = 0,5*ρ*A*v^3* ηm* ηel* Cp
    A = (π*D)^2/4 where D is bladeLength * 2
  */

  if (turbineSpeed < minWindSpeedToWork || turbineSpeed > maxiWindSpeedToWork) {
    return 0;
  }

  const A = Math.pow(Math.PI() * bladeLength * 2, 2) / 4;

  return (
    (0.5 *
      windDensity *
      A *
      Math.pow(turbineSpeed, 3) *
      generatorEfficiency *
      mechanicalEfficiency *
      CpFactor) /
    1000
  );
};

export const getSimulationResult = (parameters) => {
  const {
    turbinePower, // watts
    turbineSpeed, // meters per second
    requiredWaterTemperature, // degrees Celsius
    waterStartTemperature, // degrees Celsius
  } = parameters;

  return {
    isWaterHeaterTurnedOn: true,
    waterTemperature: 50,
  };
};
